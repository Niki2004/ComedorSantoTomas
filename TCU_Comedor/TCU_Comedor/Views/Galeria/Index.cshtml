@model List<TCU_Comedor.Models.Galeria>

<!DOCTYPE html>
<html class="no-js">

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Inventario - Comedor Institucional</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/css/main.css" rel="stylesheet" />
    <link href="~/css/responsive.css" rel="stylesheet" />
    <link href="~/css/IndexAdm.css" rel="stylesheet" />

    <style>
        /* Estilos modernos para el inventario */
        .inventory-container {
            background: linear-gradient(135deg, #ffffff 0%, #ffffff 100%);
            min-height: 100vh;
            padding: 40px 0;
        }

        .inventory-header {
            text-align: center;
            margin-bottom: 50px;
            color: orangered;
        }

            .inventory-header h1 {
                font-size: 3.5rem;
                font-weight: 800;
                text-shadow: 2px 2px 10px rgba(0,0,0,0.3);
                margin-bottom: 20px;
            }

            .inventory-header p {
                font-size: 1.2rem;
                opacity: 0.9;
                max-width: 600px;
                margin: 0 auto;
            }

        .search-filters {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 40px;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .search-box {
            position: relative;
            margin-bottom: 20px;
        }

            .search-box input {
                width: 100%;
                padding: 15px 50px 15px 20px;
                border: none;
                border-radius: 50px;
                background: rgba(255, 255, 255, 0.9);
                font-size: 16px;
                box-shadow: 0 8px 32px rgba(0,0,0,0.1);
                transition: all 0.3s ease;
            }

                .search-box input:focus {
                    outline: none;
                    background: rgba(255, 255, 255, 1);
                    box-shadow: 0 12px 40px rgba(0,0,0,0.2);
                    transform: translateY(-2px);
                }

            .search-box .search-icon {
                position: absolute;
                right: 20px;
                top: 50%;
                transform: translateY(-50%);
                color: #667eea;
                font-size: 18px;
            }

        .filter-buttons {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            justify-content: center;
        }

        .filter-btn {
            padding: 12px 25px;
            border: none;
            border-radius: 25px;
            background: rgba(255, 255, 255, 0.8); /* más opaco */
            color: #333; /* color oscuro para contrastar con blanco */
            font-weight: 600;
            cursor: pointer;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease; /* suaviza la transición al hover */
        }

            .filter-btn:hover, .filter-btn.active {
                background: rgba(255, 255, 255, 1); /* completamente opaco al pasar el mouse */
                color: #667eea;
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            }


        .inventory-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }

        .provider-card {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 25px;
            padding: 30px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
            backdrop-filter: blur(20px);
        }

            .provider-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 5px;
                background: linear-gradient(90deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
                border-radius: 25px 25px 0 0;
            }

            .provider-card:hover {
                transform: translateY(-10px);
                box-shadow: 0 30px 80px rgba(0,0,0,0.2);
            }

        .provider-header {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
        }

        .provider-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 20px;
            color: white;
            font-size: 24px;
        }

        .provider-info h3 {
            margin: 0 0 5px 0;
            color: #2c3e50;
            font-weight: 700;
            font-size: 1.4rem;
        }

        .provider-category {
            display: inline-block;
            padding: 5px 12px;
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            color: white;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .provider-details {
            margin: 20px 0;
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 12px 0;
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }

            .detail-row:last-child {
                border-bottom: none;
            }

        .detail-label {
            font-weight: 600;
            color: #5a6c7d;
            display: flex;
            align-items: center;
        }

            .detail-label i {
                margin-right: 8px;
                color: #667eea;
            }

        .detail-value {
            font-weight: 500;
            color: #2c3e50;
        }

        .status-badge {
            padding: 6px 15px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .status-active {
            background: linear-gradient(135deg, #4ecdc4, #44a08d);
            color: white;
        }

        .status-inactive {
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            color: white;
        }

        .provider-actions {
            margin-top: 25px;
            display: flex;
            gap: 10px;
        }

        .action-btn {
            flex: 1;
            padding: 12px;
            border: none;
            border-radius: 15px;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-edit {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-view {
            background: linear-gradient(135deg, #4ecdc4, #44a08d);
            color: white;
        }

        .btn-delete {
            background: linear-gradient(135deg, #ff6b6b, #ee5a52);
            color: white;
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
        }

        .floating-add-btn {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 70px;
            height: 70px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            font-size: 24px;
            cursor: pointer;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
            transition: all 0.3s ease;
            z-index: 1000;
        }

            .floating-add-btn:hover {
                transform: scale(1.1);
                box-shadow: 0 15px 40px rgba(102, 126, 234, 0.6);
            }

        .stats-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 25px;
            text-align: center;
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 800;
            display: block;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        media (max-width: 768px) {
            .inventory-grid

        {
            grid-template-columns: 1fr;
        }

        .inventory-header h1 {
            font-size: 2.5rem;
        }

        .filter-buttons {
            justify-content: center;
        }
        }
    </style>
</head>

<body>

    <section id="hero-area">
        <img class="img-responsive" src="~/Imagen/header.jpg" alt="" />
    </section>

    <nav id="navigation">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="block">
                        <nav class="navbar navbar-default">
                            <div class="container-fluid">
                                <div class="navbar-header">
                                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
                                            data-target="#bs-example-navbar-collapse-1">
                                        <span class="sr-only">Toggle navigation</span>
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                    </button>
                                </div>

                                <nav class="navbar navbar-expand-lg">
                                    <div class="collapse navbar-collapse" id="navbarNav">
                                        <ul class="navbar-nav ms-auto">
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("IndChef", "RolesPropuestos")">Inicio</a> @*Listo*@
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("Index", "Galeria")">Galeria</a> @*Listo*@
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("IndexChef", "Menu")">Menú</a> @*Listo, falta el menu bien*@
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("Inventario", "Menu")">Inventario</a> @*Listo, falta el menu bien*@
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("Index", "Categoria")">Categoria Alimenticia</a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="@Url.Action("Perfil", "Usuarios")">Perfil</a> @*Listo*@
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href='@Url.Action("Index", "Ajustes")'><i class="fas fa-cog"></i></a> @*Listo*@
                                            </li>
                                        </ul>
                                    </div>
                                </nav>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <section id="about-us">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="block">
                        <img class="wow fadeInUp" data-wow-duration="300ms" data-wow-delay="400ms" src="~/Imagen/cooker-img.png"
                             alt="cooker-img">
                        <h1 class="heading wow fadeInUp" data-wow-duration="400ms" data-wow-delay="500ms">
                            Administra
                            <span>Nuestro Comedor</span> </br>con la mejor <span>Gestión de Proveedores</span>
                        </h1>
                        <p class="wow fadeInUp" data-wow-duration="300ms" data-wow-delay="600ms">
                            Como administrador del Comedor Escolar de la Escuela Santo Tomás, tienes en tus manos la responsabilidad de brindar</br>
                            la mejor experiencia alimentaria a nuestros estudiantes. Desde este panel puedes controlar todos los aspectos del</br>
                            sistema: menús, usuarios, inventario y reportes. Tu gestión eficiente garantiza que cada niño reciba una alimentación</br>
                            de calidad y que el comedor funcione de manera óptima día a día.
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div class="inventory-container">
        <div class="container">
            <div class="stats-row">
                <div class="stat-card">
                    <span class="stat-number" id="totalProviders">@Model.Count()</span>
                    <span class="stat-label">Proveedores Totales</span>
                </div>
                <div class="stat-card">
                    <span class="stat-number" id="categories">@Model.Select(p => p.AgendaAlimenticia.Nombre).Distinct().Count()</span>
                    <span class="stat-label">Categorías</span>
                </div>
            </div>

            <div class="search-filters">
                <div class="search-box">
                    <input type="text" id="searchInput" placeholder="Buscar proveedores por nombre, categoría o contacto...">
                    <i class="fas fa-search search-icon"></i>
                </div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">Todos</button>
                    @foreach (var categoria in Model.Select(p => p.AgendaAlimenticia.Nombre).Where(c => !string.IsNullOrEmpty(c)).Distinct())
                    {
                        <button class="filter-btn" data-filter="@categoria">@categoria</button>
                    }
                </div>
            </div>

            <div class="inventory-grid" id="providersGrid">
                @foreach (var proveedor in Model)
                {
                    <div class="provider-card" data-category="@proveedor.AgendaAlimenticia.Nombre">
                        <div class="provider-header">
                            <div class="provider-icon">
                                <i class="fas fa-truck"></i>
                            </div>
                            <div class="provider-info">
                                <h3>Galeria Escolar</h3>
                                @if (proveedor.AgendaAlimenticia != null)
                                {
                                    <span class="provider-category">@proveedor.AgendaAlimenticia.Nombre</span>
                                }
                            </div>
                        </div>

                        <div class="provider-details">
                            <div class="detail-row">
                                <span class="detail-label">
                                    <i class="fas fa-calendar me-2"></i>
                                    Fecha
                                </span>
                                <span class="detail-value">@proveedor.FechaMenu.ToString("yyyy-MM-dd")</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">
                                    <i class="fas fa-file-alt me-2"></i>
                                    Descripción
                                </span>
                                <span class="detail-value">@(proveedor.AgendaAlimenticia.Nombre ?? "No especificado")</span>
                            </div>
                          
                        </div>

                    </div>
                }
            </div>
        </div>

            <button class="floating-add-btn" onclick="addNewProvider()">
                <i class="fas fa-plus"></i>
            </button>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>

        // Funcionalidad de búsqueda
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchTerm = this.value.toLowerCase();
            const cards = document.querySelectorAll('.provider-card');

            cards.forEach(card => {
                const name = card.querySelector('h3').textContent.toLowerCase();
                const category = card.dataset.category ? card.dataset.category.toLowerCase() : '';
                const email = card.querySelector('.detail-value').textContent.toLowerCase();

                if (name.includes(searchTerm) || category.includes(searchTerm) || email.includes(searchTerm)) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        });

        // Funcionalidad de filtros
        document.querySelectorAll('.filter-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                // Remover clase activa de todos los botones
                document.querySelectorAll('.filter-btn').forEach(b => b.classList.remove('active'));
                // Agregar clase activa al botón clickeado
                this.classList.add('active');

                const filter = this.dataset.filter;
                const cards = document.querySelectorAll('.provider-card');

                cards.forEach(card => {
                    if (filter === 'all') {
                        card.style.display = 'block';
                    } else if (filter === 'Activo' || filter === 'Inactivo') {
                        if (card.dataset.status === filter) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    } else {
                        if (card.dataset.category === filter) {
                            card.style.display = 'block';
                        } else {
                            card.style.display = 'none';
                        }
                    }
                });
            });
        });

        // Funciones para los botones de acción

        function addNewProvider() {
            window.location.href = '@Url.Action("CrearGale", "Galeria")';
        }

        // Animaciones de entrada
        window.addEventListener('load', function() {
            const cards = document.querySelectorAll('.provider-card');
            cards.forEach((card, index) => {
                setTimeout(() => {
                    card.style.opacity = '0';
                    card.style.transform = 'translateY(30px)';
                    card.style.transition = 'all 0.6s ease';

                    setTimeout(() => {
                        card.style.opacity = '1';
                        card.style.transform = 'translateY(0)';
                    }, 50);
                }, index * 100);
            });
        });
    </script>
</body>

</html>